========================================
Test Setup and Helper Methods
========================================
>>> import os, sys, doctest
>>> sys.path.insert(0, os.path.join('.', '..', '..'))
>>> from qtodotxt.lib import todolib, task_htmlizer

========================================
1. Simple task should return simple html
========================================
>>> task = todolib.Task('this is my task')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task</font>'

========================================
2. Test task with a single context at the end
========================================
>>> task = todolib.Task('this is my task @context')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task <font color="green">@context</font></font>'

========================================
3. Test task with a single context at the center
========================================
>>> task = todolib.Task('this is my task @context and some more words')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task <font color="green">@context</font> and some more words</font>'

========================================
4. Test task with a single project at the end
========================================
>>> task = todolib.Task('this is my task +project')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task <font style="color:#64AAD0">+project</font></font>'

========================================
5. Test task with a single project at the center
========================================
>>> task = todolib.Task('this is my task +project and some more words')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task <font style="color:#64AAD0">+project</font> and some more words</font>'

========================================
6. Test task with a single context and a single project
========================================
>>> task = todolib.Task('this is my task @context and +project and some more words')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task <font color="green">@context</font> and <font style="color:#64AAD0">+project</font> and some more words</font>'


========================================
7. Test task with a two contexts and a three projects
========================================
>>> task = todolib.Task('this is my task @context1 and @context2 and +project1 +project2 and +project3 some more words')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font face="mono">&nbsp;&nbsp;&nbsp;</font><font color="black">this is my task <font color="green">@context1</font> and <font color="green">@context2</font> and <font style="color:#64AAD0">+project1</font> <font style="color:#64AAD0">+project2</font> and <font style="color:#64AAD0">+project3</font> some more words</font>'

========================================
8. Test task with priority A
========================================
>>> task = todolib.Task('(A) this is my task')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font color="black"><font face="mono" color="red">&nbsp;A&nbsp;</font>this is my task</font>'

========================================
9. Test task with priority B
========================================
>>> task = todolib.Task('(B) this is my task')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font color="black"><font face="mono" color="green">&nbsp;B&nbsp;</font>this is my task</font>'

========================================
10. Test task with priority C
========================================
>>> task = todolib.Task('(C) this is my task')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font color="black"><font face="mono" color="cyan">&nbsp;C&nbsp;</font>this is my task</font>'

========================================
11. Test task with priority D
========================================
>>> task = todolib.Task('(D) this is my task')
>>> htmlizer = task_htmlizer.TaskHtmlizer()
>>> htmlizer.task2html(task)
'<font color="black"><font face="mono">&nbsp;D&nbsp;</font>this is my task</font>'

